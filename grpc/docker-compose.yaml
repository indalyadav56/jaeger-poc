services:
  envoy:
    image: envoyproxy/envoy:v1.29-latest
    container_name: envoy
    ports:
      - "80:80"
      - "9901:9901"  # Admin interface
    volumes:
      - ./api-gateway/envoy.yaml:/etc/envoy/envoy.yaml
    depends_on:
      - auth-service
      - user-service
      - product-service

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger-grpc
    ports:
      - "16686:16686" # Jaeger UI
      - "4318:4318" # OTLP HTTP ingest (v1/traces)
    environment:
      - LOG_LEVEL=debug

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=indal_db
      - DB_PORT=5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: indal
      MONGO_INITDB_ROOT_PASSWORD: indal

  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    container_name: user-service
    depends_on:
      - jaeger
      - product-service
    ports:
      - "50051:50051"
    environment:
      - DATABASE_POSTGRES_NAME=users
      - DATABASE_POSTGRES_HOST=postgres
      - DATABASE_POSTGRES_PORT=5432
      - DATABASE_POSTGRES_USERNAME=postgres
      - DATABASE_POSTGRES_PASSWORD=postgres
      - APP_TRACE_ENDPOINT=jaeger:4318
      - CLIENTS_PRODUCT_SERVICE_TARGET=product-service
      - CLIENTS_PRODUCT_SERVICE_PORT=50053

  product-service:
    build:
      context: .
      dockerfile: product-service/Dockerfile
    container_name: product-service
    depends_on:
      - jaeger
    ports:
      - "50053:50053"
    environment:
      - DATABASE_MONGODB_URI=mongodb://indal:indal@mongodb:27017
      - DATABASE_MONGODB_DATABASE=products
      - APP_TRACE_ENDPOINT=jaeger:4318

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: auth-service
    depends_on:
      - jaeger
      - user-service
    ports:
      - "50052:50052"
      - "8081:8081"

  swagger-api-service:
    build:
      context: ./swagger-api-service
      dockerfile: Dockerfile
    container_name: swagger-api-service
    depends_on:
      - auth-service
      - user-service
      - product-service
    ports:
      - "8085:8085"

volumes:
  es_data:
  postgres_data:
  mongodb_data:
